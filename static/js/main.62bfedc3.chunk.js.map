{"version":3,"sources":["actions.js","constants.js","components/Navbar.js","selectors.js","components/containers/navbar.js","components/PetProfile.js","components/SearchPanel.js","components/containers/SearchPanel.js","components/SavedPets.js","components/containers/SavedPets.js","helpers/capitalize.js","components/form_fields.js","components/UserProfile.js","components/containers/UserProfile.js","components/PetDetails.js","components/containers/PetDetails.js","components/App.js","components/containers/App.js","serviceWorker.js","helpers/get_initial_pet.js","reducers.js","index.js"],"names":["SET_ACTIVE_TAB","setActiveTab","tab","type","payload","activeTab","GO_TO_NEXT_PET","goToNextPet","SAVE_CURRENT_PET","SET_CLICKED_PET","UPDATE_USER","NAVIGATION","SEARCH","SAVED","SETTINGS","PET_DETAILS","Navbar","buildNavButton","name","i","react_default","a","createElement","className","key","concat","onClick","_this","handleNavClick","buildNavButtons","Object","values","map","this","props","Component","getCurrentUser","state","currentUser","getAllPets","pets","getSavedPetIds","savedPets","getActivePetId","activePetId","getActiveTab","getClickedPetId","clickedPetId","getPreferences","createSelector","user","typePreference","ageRange","getVisiblePets","preferences","allPets","filter","pet","age","min","max","getCurrentPet","id","find","getNextPet","activePetIndex","findIndex","getSavedPetDetails","savedIds","toConsumableArray","getClickedPetDetails","NavbarContainer","connect","dispatch","PetProfile","size","petImage","src","img","alt","petInfo","sex","petBlurb","profile","SearchPanel","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSwipe","e","handleApproval","handleRejection","renderProfile","components_PetProfile","touchStart","handleTouchStart","bind","assertThisInitialized","handleTouchEnd","window","addEventListener","removeEventListener","setState","touches","distance","changedTouches","pageX","target","SearchPanelContainer","SavedPets","_ref","openPetDetails","noSavedPetsMessage","petsList","buildPetBlurb","length","SavedPetsContainer","setClickedPet","capitalize","word","charAt","toUpperCase","slice","RockerSwitch","title","checked","onChange","_ref$options","slicedToArray","options","b","newPreference","MinMax","_ref2","handleMinChange","handleMaxChange","value","placeholder","UserProfile","_props$currentUser","updateUser","handleAgeChange","newRange","form_fields_RockerSwitch","form_fields_MinMax","UserProfileContainer","PetDetails","PetDetailsContainer","App","renderCurrentPanel","containers_SavedPets","containers_SearchPanel","containers_UserProfile","containers_PetDetails","navbar","AppContainer","Boolean","location","hostname","match","getInitialPet","_currentUser$ageRange","initialState","objectSpread","settings","navigation","action","activePet","visiblePets","nextPet","savePet","Set","add","clickedPet","store","createStore","arguments","undefined","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62bfedc3.chunk.js","sourcesContent":["export const SET_ACTIVE_TAB = 'SET_ACTIVE_TAB'\r\nexport function setActiveTab(tab) {\r\n    return {\r\n        type: SET_ACTIVE_TAB,\r\n        payload: {\r\n            activeTab: tab,\r\n        }\r\n    }\r\n}\r\n\r\nexport const GO_TO_NEXT_PET = 'GO_TO_NEXT_PET'\r\nexport const goToNextPet = () => ({ type: GO_TO_NEXT_PET })\r\n\r\nexport const SAVE_CURRENT_PET = 'SAVE_CURRENT_PET'\r\nexport const saveCurrentPet = () => ({ type: SAVE_CURRENT_PET })\r\n\r\nexport const SET_CLICKED_PET = 'SET_CLICKED_PET'\r\nexport const setClickedPet = id => {\r\n    return {\r\n        type: SET_CLICKED_PET,\r\n        payload: { id },\r\n    }\r\n}\r\n\r\nexport const UPDATE_USER = 'UPDATE_USER'\r\nexport const updateUser = (key, value) => {\r\n    return {\r\n        type: UPDATE_USER,\r\n        payload: {\r\n            key,\r\n            value\r\n        }\r\n    }\r\n}","export const NAVIGATION = {\r\n    SEARCH: \"Search\",\r\n    SAVED: \"Saved\",\r\n    SETTINGS: \"Settings\",\r\n}\r\n\r\nexport const PET_DETAILS = \"Details\"\r\nexport const TOUCH_SWIPE_MIN_DISTANCE = 5","import React, { Component } from \"react\";\r\nimport { NAVIGATION } from \"../constants\"\r\n\r\nclass Navbar extends Component {\r\n    handleNavClick(name) {\r\n        this.props.setActiveTab(name)\r\n    }\r\n\r\n    buildNavButton = (name, i) => {\r\n        return <li className='look-like-link' key={`nav-li-${i}`} onClick={() => this.handleNavClick(name)}>\r\n            {name}\r\n        </li>\r\n    }\r\n\r\n    buildNavButtons = () => {\r\n        return <ul className=\"nav-options\">\r\n            { Object.values(NAVIGATION).map(this.buildNavButton) }\r\n        </ul>\r\n    }\r\n\r\n    render() {\r\n        return <nav className=\"navbar\">\r\n            {this.buildNavButtons()}\r\n        </nav>\r\n    }\r\n}\r\n\r\nexport default Navbar","import { createSelector } from 'reselect'\r\n\r\nexport const getCurrentUser = state => state.currentUser\r\nexport const getAllPets = state => state.pets\r\nexport const getSavedPetIds = state => state.savedPets\r\nexport const getActivePetId = state => state.activePetId\r\nexport const getActiveTab = state => state.activeTab\r\nexport const getClickedPetId = state => state.clickedPetId\r\n\r\nexport const getPreferences = createSelector(\r\n    getCurrentUser,\r\n    user => ({ typePreference: user.typePreference, ageRange: user.ageRange })\r\n)\r\n\r\nexport const getVisiblePets = createSelector(\r\n    [getPreferences, getAllPets],\r\n    (preferences, allPets) => {\r\n        const { typePreference, ageRange } = preferences\r\n        return allPets.filter(\r\n            pet => pet.type === typePreference && pet.age >= ageRange.min && pet.age <= ageRange.max\r\n        )\r\n    }\r\n)\r\n\r\nexport const getCurrentPet = createSelector(\r\n    [getVisiblePets, getActivePetId],\r\n    (pets, id) => pets.find(pet => pet.id === id)\r\n)\r\n\r\nexport const getNextPet = createSelector(\r\n    [getVisiblePets, getActivePetId],\r\n    (pets, id) => {\r\n        const activePetIndex = pets.findIndex(pet => pet.id === id)\r\n        return pets[activePetIndex + 1]\r\n    }\r\n)\r\n\r\nexport const getSavedPetDetails = createSelector(\r\n    [getAllPets, getSavedPetIds],\r\n    (allPets, savedIds) => {\r\n        return [...savedIds].map(id => allPets.find(pet => pet.id === id))\r\n    }\r\n)\r\n\r\nexport const getClickedPetDetails = createSelector(\r\n    [getAllPets, getClickedPetId],\r\n    (allPets, id) => {\r\n        return allPets.find(pet => pet.id === id)\r\n    }\r\n)","import { connect } from 'react-redux'\r\nimport { setActiveTab } from '../../actions'\r\nimport Navbar from '../Navbar'\r\nimport { getActiveTab } from '../../selectors';\r\n\r\nconst mapStateToProps = state => {\r\n    return { activeTab: getActiveTab(state) }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setActiveTab: name => {\r\n            dispatch(setActiveTab(name))\r\n        }\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Navbar)\r\n\r\nexport default NavbarContainer\r\n","import React from 'react'\r\nconst PetProfile = props => {\r\n    const { pet, size } = props\r\n\r\n    const petImage = <div className='img-container' ><img src={pet.img} alt='Your pet here' /></div>\r\n    const petInfo = <div className='info'>{`${pet.name}, ${pet.age}yr, ${pet.sex}`}</div>\r\n    const petBlurb = <div className='blurb'>{pet.profile}</div>\r\n\r\n    return <div className={`pet-profile-${size}`}>\r\n        {petImage}\r\n        <div className='summary'>\r\n            {petInfo}\r\n            {petBlurb}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default PetProfile","import React, { Component } from 'react'\r\nimport PetProfile from './PetProfile'\r\nimport { TOUCH_SWIPE_MIN_DISTANCE } from '../constants'\r\n\r\nclass SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { touchStart: null }\r\n        this.handleTouchStart = this.handleTouchStart.bind(this)\r\n        this.handleTouchEnd = this.handleTouchEnd.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.onSwipe, false)\r\n        window.addEventListener('touchstart', this.handleTouchStart, false)\r\n        window.addEventListener('touchend', this.handleTouchEnd, false)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.onSwipe, false)\r\n        window.removeEventListener('touchstart', this.handleTouchStart, false)\r\n        window.removeEventListener('touchend', this.handleTouchEnd, false)\r\n    }\r\n\r\n    handleTouchStart(e) {\r\n        this.setState({ touchStart: e.touches[0] })\r\n    }\r\n\r\n    handleTouchEnd(e) {\r\n        const distance = e.changedTouches[0].pageX - this.state.touchStart.pageX\r\n        this.setState({ touchStart: null })\r\n        if (e.target.className === 'blurb') { return }\r\n        if (distance > TOUCH_SWIPE_MIN_DISTANCE) {\r\n            this.props.handleApproval(this.props.pet)\r\n        } else if (distance < -TOUCH_SWIPE_MIN_DISTANCE) {\r\n            this.props.handleRejection(this.props.pet)\r\n        }\r\n    }\r\n\r\n    onSwipe = e => {\r\n        if (e.key === 'ArrowRight') {\r\n            this.props.handleApproval(this.props.pet)\r\n        } else if (e.key === 'ArrowLeft') {\r\n            this.props.handleRejection(this.props.pet)\r\n        }\r\n    }\r\n\r\n    renderProfile = () => this.props.pet\r\n        ? <PetProfile pet={this.props.pet} size='large' />\r\n        : <div>No pets available!</div>\r\n\r\n    render() {\r\n        return this.renderProfile()\r\n    }\r\n}\r\n\r\nexport default SearchPanel","import { connect } from 'react-redux'\r\nimport SearchPanel from '../SearchPanel';\r\nimport { goToNextPet, saveCurrentPet } from '../../actions'\r\nimport { getCurrentPet, getPreferences } from '../../selectors';\r\n\r\nconst mapStateToProps = state => {\r\n    const preferences = getPreferences(state)\r\n    return {\r\n        pet: getCurrentPet(state),\r\n        currentUser: preferences,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        handleApproval: () => {\r\n            dispatch(saveCurrentPet())\r\n            dispatch(goToNextPet())\r\n        },\r\n        handleRejection: () => { dispatch(goToNextPet()) },\r\n        goToNextPet: () => { dispatch(goToNextPet()) }\r\n    }\r\n}\r\n\r\nconst SearchPanelContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SearchPanel)  \r\n\r\nexport default SearchPanelContainer","import React from 'react'\r\nimport PetProfile from './PetProfile';\r\n\r\nconst SavedPets = ({ pets, openPetDetails }) => {\r\n    const buildPetBlurb = (pet, i) =>\r\n        <li onClick={() => openPetDetails(pet.id)} key={`savedPet-${i}`}>\r\n            <PetProfile pet={pet} size='small' />\r\n        </li>\r\n    const noSavedPetsMessage = <div className='no-saved-pets'>\r\n        You haven't saved any pets. Go search for some pets to adopt!\r\n    </div>\r\n    const petsList = <ol className='saved-pets-list'>\r\n        {pets.map((pet, i) => buildPetBlurb(pet, i))}\r\n    </ol>\r\n    return pets.length > 0 ? petsList : noSavedPetsMessage\r\n}\r\n\r\nexport default SavedPets","import SavedPets from '../SavedPets'\r\nimport { connect } from 'react-redux';\r\nimport { setActiveTab, setClickedPet } from '../../actions'\r\nimport { getSavedPetDetails } from '../../selectors'\r\nimport { PET_DETAILS } from '../../constants'\r\n\r\nconst mapStateToProps = state => {\r\n    return { pets: getSavedPetDetails(state) }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setActiveTab: tab => { dispatch(setActiveTab(tab)) },\r\n        openPetDetails: id => {\r\n            dispatch(setClickedPet(id))\r\n            dispatch(setActiveTab(PET_DETAILS))\r\n        }\r\n    }\r\n}\r\n\r\nconst SavedPetsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(SavedPets)\r\n\r\nexport default SavedPetsContainer","const capitalize = word => word.charAt(0).toUpperCase() + word.slice(1)\r\n\r\nexport default capitalize","import React from 'react'\r\nimport capitalize from '../helpers/capitalize'\r\n\r\nexport const RockerSwitch = ({title, checked, onChange, options: [a, b]}) => {\r\n    const handleRockerToggle = e => {\r\n        const newPreference = e.target.checked ? b : a\r\n        onChange(newPreference)\r\n    }\r\n    return <div className='rocker-switch'>\r\n        <span className='preference-title'>{title}</span>\r\n        <div className='options'>\r\n            <span>{capitalize(a)}</span>\r\n            <label className='switch'>\r\n                <input checked={checked} onChange={handleRockerToggle} type='checkbox' />\r\n                <span className='slider'></span>\r\n            </label>\r\n            <span>{capitalize(b)}</span>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport const MinMax = ({title, min, max, handleMinChange, handleMaxChange}) => {\r\n    return <div className='min-max'>\r\n        <span className='preference-title'>{title}</span>\r\n        <div className='options'>\r\n            <input value={min} placeholder='min' onChange={handleMinChange} type='number' min={0} />\r\n            <input value={max} placeholder='max' onChange={handleMaxChange} type='number' min={0} />\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport { RockerSwitch, MinMax } from './form_fields'\r\n\r\nconst UserProfile = props => {\r\n    const {\r\n        currentUser: { ageRange, profile, typePreference },\r\n        updateUser, goToNextPet\r\n    } = props\r\n    const updateTypePreference = type => {\r\n        updateUser('typePreference', type)\r\n        goToNextPet()\r\n    }\r\n    const handleAgeChange = ( { target: { value } }, key) => {\r\n        const newRange = key === 'min' ? { min: value, max: ageRange.max } : { min: ageRange.min, max: value }\r\n        updateUser('ageRange', newRange)\r\n        goToNextPet()\r\n    }\r\n    const handleTextChange = e => { updateUser('profile', e.target.value) }\r\n    const options = ['cat', 'dog']\r\n    return <div className='adopter-profile'>\r\n        <div className='adopter-summary'>\r\n            <h2>Adopter Profile</h2>\r\n            <textarea value={profile} onChange={handleTextChange} className='adopter-blurb' />\r\n        </div>\r\n        <div className='adopter-preferences'>\r\n            <h2>Preferences</h2>\r\n            <div><RockerSwitch\r\n                checked={typePreference === options[1]}\r\n                onChange={updateTypePreference}\r\n                title='Animal'\r\n                options={options}/>\r\n            </div>\r\n            <div><MinMax\r\n                title='Age'\r\n                min={ageRange.min}\r\n                max={ageRange.max}\r\n                handleMinChange={e => handleAgeChange(e, 'min')}\r\n                handleMaxChange={e => handleAgeChange(e, 'max')}/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default UserProfile","import { connect } from 'react-redux'\r\nimport UserProfile from '../UserProfile'\r\nimport { goToNextPet, updateUser } from '../../actions'\r\nimport { getCurrentUser } from '../../selectors';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        currentUser: getCurrentUser(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        goToNextPet: () => { dispatch(goToNextPet()) },\r\n        updateUser: (key, value) => {\r\n            dispatch(updateUser(key, value))\r\n        }\r\n    }\r\n}\r\n\r\nconst UserProfileContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(UserProfile)\r\n\r\nexport default UserProfileContainer","import React from 'react'\r\nimport PetProfile from './PetProfile'\r\nimport { NAVIGATION } from '../constants'\r\n\r\n const PetDetails = ({ pet, setActiveTab }) => {\r\n    const handleBackClick = () => setActiveTab(NAVIGATION.SAVED)\r\n    return <div className='pet-details-container'>\r\n        <div className='back-to-saved look-like-link' onClick={handleBackClick} ></div>\r\n        <PetProfile pet={pet} size='large' />\r\n    </div>\r\n}\r\n\r\n export default PetDetails","import { connect } from 'react-redux'\r\nimport PetDetails from '../PetDetails'\r\nimport { getClickedPetDetails } from '../../selectors';\r\nimport { setActiveTab } from '../../actions';\r\n\r\n const mapStateToProps = state => {\r\n    return {\r\n        pet: getClickedPetDetails(state)\r\n    }\r\n}\r\n\r\n const mapDispatchToProps = dispatch => {\r\n    return {\r\n        setActiveTab: tab => dispatch(setActiveTab(tab))\r\n    }\r\n}\r\n\r\n const PetDetailsContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PetDetails)\r\n\r\n export default PetDetailsContainer ","import React, { Component } from 'react'\r\nimport NavbarContainer from './containers/navbar'\r\nimport '../stylesheets/App.scss'\r\nimport SearchPanelContainer from './containers/SearchPanel'\r\nimport SavedPetsContainer from './containers/SavedPets'\r\nimport UserProfileContainer from './containers/UserProfile'\r\nimport PetDetailsContainer from './containers/PetDetails'\r\nimport { NAVIGATION, PET_DETAILS } from '../constants'\r\n\r\nclass App extends Component {\r\n  renderCurrentPanel = () => {\r\n    const { SAVED, SEARCH, SETTINGS } = NAVIGATION\r\n    switch(this.props.activeTab) {\r\n      case SAVED:\r\n        return <SavedPetsContainer />\r\n      case SEARCH:\r\n        return <SearchPanelContainer />\r\n      case SETTINGS:\r\n        return <UserProfileContainer />\r\n      case PET_DETAILS:\r\n        return <PetDetailsContainer />\r\n      default:\r\n        return <SearchPanelContainer />\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div id=\"app\">\r\n      <div className=\"current-panel\">\r\n        {this.renderCurrentPanel()}\r\n      </div>\r\n      <NavbarContainer />\r\n    </div>\r\n  }\r\n}\r\n\r\nexport default App\r\n","import { connect } from 'react-redux'\r\nimport App from '../App'\r\nimport { getActiveTab } from '../../selectors';\r\n\r\nconst mapStateToProps = state => {\r\n    return { activeTab: getActiveTab(state) }\r\n}\r\n\r\nconst AppContainer = connect(\r\n    mapStateToProps,\r\n    null,\r\n)(App)\r\n\r\nexport default AppContainer","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const getInitialPet = (allPets, currentUser) => {\r\n    const { typePreference, ageRange: { max, min } } = currentUser\r\n    return allPets.find(\r\n        pet => pet.type === typePreference && pet.age >= min && pet.age <= max\r\n    ).id\r\n}\r\n\r\nexport default getInitialPet","import { SET_CLICKED_PET, SET_ACTIVE_TAB, SAVE_CURRENT_PET, GO_TO_NEXT_PET, UPDATE_USER } from \"./actions\"\r\nimport { NAVIGATION } from \"./constants\";\r\nimport pets from \"./pets.json\"\r\nimport settings from \"./settings.json\"\r\nimport { getActiveTab, getActivePetId, getCurrentUser, getSavedPetIds, getVisiblePets, getNextPet, getClickedPetId } from \"./selectors\";\r\nimport getInitialPet from \"./helpers/get_initial_pet\";\r\n\r\nconst initialState = {\r\n    currentUser: { ...settings },\r\n    pets,\r\n    activePetId: getInitialPet(pets, settings),\r\n    savedPets: [],\r\n    activeTab: NAVIGATION.SEARCH,\r\n    clickedPetId: null\r\n}\r\n\r\nfunction navigation(state, action) {\r\n    switch(action.type) {\r\n        case SET_ACTIVE_TAB:\r\n            return action.payload.activeTab\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction activePet(state, action) {\r\n    const activePetId = getActivePetId(state)\r\n    const visiblePets = getVisiblePets(state)\r\n\r\n    switch(action.type) {\r\n        case GO_TO_NEXT_PET: {\r\n            if (visiblePets.length === 0) { return }\r\n            const nextPet = getNextPet(state)\r\n            return nextPet ? nextPet.id : visiblePets[0].id\r\n        }\r\n        default:\r\n            return activePetId\r\n    }\r\n}\r\n\r\nfunction savePet(state, action) {\r\n    const activePetId = getActivePetId(state)\r\n    const savedPets = getSavedPetIds(state)\r\n    switch(action.type) {\r\n        case SAVE_CURRENT_PET: {\r\n            const newSet = new Set(savedPets).add(activePetId)\r\n            return newSet\r\n        }\r\n        default:\r\n            return savedPets\r\n    }\r\n}\r\n\r\nfunction user(state, action) {\r\n    const { type, payload } = action\r\n    const user = { ...state }\r\n    switch(type) {\r\n        case UPDATE_USER:\r\n            user[payload.key] = payload.value\r\n            return user\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nfunction clickedPet(state, action) {\r\n    switch(action.type) {\r\n        case SET_CLICKED_PET:\r\n            return action.payload.id\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n    return {\r\n        ...state,\r\n        savedPets: savePet(state, action),\r\n        activePetId: activePet(state, action),\r\n        activeTab: navigation(getActiveTab(state), action),\r\n        currentUser: user(getCurrentUser(state), action),\r\n        clickedPetId: clickedPet(getClickedPetId(state), action)\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './stylesheets/index.scss';\r\nimport AppContainer from './components/containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore } from 'redux'\r\nimport app from './reducers'\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(app)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <AppContainer />\r\n    </Provider>, document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}